" Basic options
set mouse=a
set number
set nobackup
set autochdir
set hlsearch
set fileencodings=utf-8,euc-kr,cp949
set encoding=utf-8
syntax on

" Indent, tab
set autoindent
set smartindent
inoremap # X#
set shiftwidth=4
set softtabstop=4
set expandtab
autocmd FileType markdown setlocal shiftwidth=2 softtabstop=2

" Plugin
call plug#begin('~/.vim/plugged')
Plug 'preservim/nerdtree'
Plug 'vim-airline/vim-airline'
Plug 'neomake/neomake'
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'
Plug 'davidhalter/jedi-vim'
Plug 'ryanoasis/vim-devicons'
Plug 'tpope/vim-commentary'
Plug 'liuchengxu/vim-which-key'
Plug 'jlanzarotta/bufexplorer'
call plug#end()

" Use 24-bit (true-color) mode.
" The code below is copied from
" onedark github page: https://github.com/joshdick/onedark.vim
if (empty($TMUX))
  if (has("nvim"))
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
  endif
  if (has("termguicolors"))
    set termguicolors
  endif
endif

" Theme
set cursorline
colorscheme onedark
let g:airline_theme = 'onedark'
let g:airline_powerline_fonts = 1
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'
set noshowmode

" Neomake syntax check
let g:neomake_python_enabled_makers = ['python']
try
    call neomake#configure#automake('w')
catch
endtry

" NERDTree
let NERDTreeMinimalUI=1
let NERDTreeMapUpdirKeepOpen = "u"
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
let NERDTreeDirArrowExpandable = ""
let NERDTreeDirArrowCollapsible = ""
let g:DevIconsEnableFoldersOpenClose = 1
let g:WebDevIconsNerdTreeBeforeGlyphPadding = " "
highlight! link NERDTreeFlags NERDTreeDir

" Gitgutter
let g:gitgutter_map_keys = 0
autocmd BufWritePost * GitGutter

" JEDI-VIM
let g:jedi#goto_command = ""
let g:jedi#goto_assignments_command = ""
let g:jedi#goto_stubs_command = ""
let g:jedi#goto_definitions_command = ""
let g:jedi#documentation_command = ""
let g:jedi#usages_command = ""
let g:jedi#completions_command = "<C-n>"
let g:jedi#rename_command = ""
let g:jedi#show_call_signatures = 0
let g:jedi#popup_on_dot = 0
autocmd FileType python setlocal completeopt-=preview

" Shortcuts
map <S-RIGHT> <END>
imap <S-RIGHT> <END>
map <S-LEFT> <HOME>
imap <S-LEFT> <HOME>

map <S-DOWN> <C-d>
imap <S-DOWN> <ESC><C-d>
map <S-UP> <C-u>
imap <S-UP> <ESC><C-u>

nmap <C-RIGHT> <C-w>l
nmap <C-LEFT> <C-w>h
nmap <C-UP> <C-w>k
nmap <C-DOWN> <C-w>j

nmap { :bprevious!<Enter>
nmap } :bnext!<Enter>

" Which key
let g:which_key_map =  {}
let g:which_key_map['q'] = [':qa', 'quit-vim']
let g:which_key_map['f'] = {
      \ 'name' : '+file' ,
      \ 't' : [':NERDTreeToggle', 'toggle-NERDTree'],
      \ 's' : [':w', 'save-current-buffer'],
      \ 'S' : [':wa', 'save-all-buffers'],
      \ 'd' : [':e ~/.vimrc', 'open-vimrc'],
      \ }
let g:which_key_map['w'] = {
      \ 'name' : '+window',
      \ 'd' : ['<C-W>c', 'delete-window'],
      \ 's' : ['<C-W>s', 'split-window-below'],
      \ 'v' : ['<C-W>v', 'split-window-right'],
      \ '=' : ['<C-W>=', 'balance-window'],
      \ }
let g:which_key_map['b'] = {
      \ 'name' : '+buffer',
      \ 'd' : ['bd', 'delete-buffer'],
      \ 'n' : [':enew', 'new-empty-buffer'],
      \ }
let g:which_key_map['c'] = {
      \ 'name' : '+code(python)',
      \ 'd' : [':call jedi#goto()', 'goto'],
      \ 's' : [':call jedi#goto_stubs()', 'stubs'],
      \ 'n' : [':call jedi#usages()', 'usages'],
      \ 'g' : [':call jedi#goto_assignments()', 'goto-assignments'],
      \ 'k' : [':call jedi#show_documentation()', 'show-documentation'],
      \ 'r' : [':call jedi#rename()', 'rename'],
      \ }
try
    call which_key#register('<Space>', "g:which_key_map")
catch
endtry
let g:mapleader = "\<Space>"
nnoremap <silent> <leader> :silent <c-u> :silent WhichKey '<Space>'<CR>
vnoremap <silent> <leader> :silent <c-u> :silent WhichKeyVisual '<Space>'<CR>
let g:which_key_use_floating_win = 0
highlight default link WhichKey          Operator
highlight default link WhichKeySeperator DiffAdded
highlight default link WhichKeyGroup     Identifier
highlight default link WhichKeyDesc      Function
autocmd! FileType which_key
autocmd  FileType which_key set laststatus=0 noshowmode noruler
  \| autocmd BufLeave <buffer> set laststatus=2 noshowmode ruler
